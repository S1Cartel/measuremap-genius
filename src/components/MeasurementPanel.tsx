
import { Button } from '@/components/ui/button';
import { Download, MapPin, Globe, Ruler } from 'lucide-react';
import type { Measurement } from '../pages/Index';
import { jsPDF } from 'jspdf';

interface MeasurementPanelProps {
  measurement: Measurement | null;
}

const MeasurementPanel = ({ measurement }: MeasurementPanelProps) => {
  const generatePDF = () => {
    if (!measurement) return;

    const doc = new jsPDF();
    
    // Header
    doc.setFontSize(24);
    doc.setTextColor(25, 118, 210);
    doc.text('üåç MeasureMap Genius Report', 20, 25);
    
    // Date
    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100);
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 20, 35);
    
    // Location info
    if (measurement.location) {
      doc.setFontSize(14);
      doc.setTextColor(0, 0, 0);
      doc.text('üìç Location:', 20, 50);
      doc.setFontSize(12);
      doc.text(measurement.location, 20, 60);
    }
    
    // Measurements section
    doc.setFontSize(16);
    doc.setTextColor(25, 118, 210);
    doc.text('üìè Measurements', 20, 80);
    
    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0);
    
    // Area measurements
    const areaHectares = (measurement.area / 10000);
    const areaAcres = areaHectares * 2.471;
    const areaSqFt = measurement.area * 10.764;
    
    doc.text(`Area: ${measurement.area.toFixed(2)} m¬≤`, 25, 95);
    doc.text(`Area: ${areaHectares.toFixed(4)} hectares`, 25, 105);
    doc.text(`Area: ${areaAcres.toFixed(4)} acres`, 25, 115);
    doc.text(`Area: ${areaSqFt.toFixed(2)} sq ft`, 25, 125);
    
    // Perimeter measurements
    const perimeterMiles = (measurement.perimeter / 1000) * 0.621371;
    const perimeterFeet = measurement.perimeter * 3.28084;
    
    doc.text(`Perimeter: ${measurement.perimeter.toFixed(2)} meters`, 25, 140);
    doc.text(`Perimeter: ${(measurement.perimeter / 1000).toFixed(3)} km`, 25, 150);
    doc.text(`Perimeter: ${perimeterMiles.toFixed(3)} miles`, 25, 160);
    doc.text(`Perimeter: ${perimeterFeet.toFixed(2)} feet`, 25, 170);
    
    // Coordinates
    if (measurement.centerPoint) {
      doc.setFontSize(16);
      doc.setTextColor(25, 118, 210);
      doc.text('üéØ Center Coordinates', 20, 190);
      
      doc.setFontSize(12);
      doc.setTextColor(0, 0, 0);
      doc.text(`Latitude: ${measurement.centerPoint[1].toFixed(6)}¬∞`, 25, 205);
      doc.text(`Longitude: ${measurement.centerPoint[0].toFixed(6)}¬∞`, 25, 215);
    }
    
    // Footer
    doc.setFontSize(8);
    doc.setTextColor(150, 150, 150);
    doc.text('Generated by MeasureMap Genius - Advanced Geospatial Analysis Tool', 20, 280);
    
    doc.save('measuremap-analysis-report.pdf');
  };

  return (
    <div className="w-96 bg-gradient-to-b from-gray-900 to-black text-white p-6 shadow-2xl overflow-y-auto border-l border-gray-700">
      <h2 className="text-2xl font-bold mb-6 text-center bg-gradient-to-r from-blue-400 to-cyan-300 bg-clip-text text-transparent">
        üìä Analysis Report
      </h2>
      
      {measurement ? (
        <div className="space-y-6">
          {measurement.location && (
            <div className="bg-gray-800/50 p-4 rounded-lg border border-gray-700">
              <div className="flex items-center gap-2 mb-2">
                <MapPin className="h-4 w-4 text-blue-400" />
                <h3 className="text-sm font-medium text-gray-300">Location</h3>
              </div>
              <p className="text-sm text-blue-300">{measurement.location}</p>
            </div>
          )}

          <div className="space-y-4">
            <div className="bg-gradient-to-br from-blue-900/50 to-cyan-900/50 p-4 rounded-lg border border-blue-700/50">
              <div className="flex items-center gap-2 mb-2">
                <Globe className="h-4 w-4 text-cyan-400" />
                <h3 className="text-sm font-medium text-gray-300">Area Analysis</h3>
              </div>
              <div className="space-y-2">
                <p className="text-lg font-bold text-cyan-300">
                  {(measurement.area / 10000).toFixed(4)} hectares
                </p>
                <p className="text-sm text-gray-400">
                  {measurement.area.toFixed(2)} m¬≤
                </p>
                <p className="text-sm text-gray-400">
                  {((measurement.area / 10000) * 2.471).toFixed(4)} acres
                </p>
                <p className="text-sm text-gray-400">
                  {(measurement.area * 10.764).toFixed(2)} sq ft
                </p>
              </div>
            </div>
            
            <div className="bg-gradient-to-br from-green-900/50 to-emerald-900/50 p-4 rounded-lg border border-green-700/50">
              <div className="flex items-center gap-2 mb-2">
                <Ruler className="h-4 w-4 text-emerald-400" />
                <h3 className="text-sm font-medium text-gray-300">Perimeter Analysis</h3>
              </div>
              <div className="space-y-2">
                <p className="text-lg font-bold text-emerald-300">
                  {(measurement.perimeter / 1000).toFixed(3)} km
                </p>
                <p className="text-sm text-gray-400">
                  {measurement.perimeter.toFixed(2)} meters
                </p>
                <p className="text-sm text-gray-400">
                  {((measurement.perimeter / 1000) * 0.621371).toFixed(3)} miles
                </p>
                <p className="text-sm text-gray-400">
                  {(measurement.perimeter * 3.28084).toFixed(2)} feet
                </p>
              </div>
            </div>

            {measurement.centerPoint && (
              <div className="bg-gradient-to-br from-purple-900/50 to-pink-900/50 p-4 rounded-lg border border-purple-700/50">
                <h3 className="text-sm font-medium text-gray-300 mb-2">üéØ Center Coordinates</h3>
                <div className="space-y-1">
                  <p className="text-sm text-purple-300">
                    Lat: {measurement.centerPoint[1].toFixed(6)}¬∞
                  </p>
                  <p className="text-sm text-purple-300">
                    Lng: {measurement.centerPoint[0].toFixed(6)}¬∞
                  </p>
                </div>
              </div>
            )}
          </div>

          <Button onClick={generatePDF} className="w-full bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white">
            <Download className="mr-2 h-4 w-4" />
            Download Detailed Report
          </Button>
        </div>
      ) : (
        <div className="text-center text-gray-400">
          <div className="mb-4">
            <Globe className="h-12 w-12 mx-auto text-blue-400 opacity-50" />
          </div>
          <p className="mb-2">No analysis data yet.</p>
          <p className="text-sm">Search for a location and start measuring to see detailed geospatial analysis.</p>
        </div>
      )}
    </div>
  );
};

export default MeasurementPanel;
